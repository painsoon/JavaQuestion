
当我们在写页面时会引入一些标签库很帅的功能就有了，比如JSTL实现表达式、流程、循环、URL控制等，shiro标签库用来做权限控制等。
是否有想过标签这东西是怎么起作用的？自己写个标签库梳理一下原理记录一下，虽然很简单但是解决了心中很久以来的疑惑。
当web容器启动时会搜索WEB-INF/META-INF/*.tld文件，根据uri创建tld的映射关系。tld是标签库的描述文件。
创建标签处理类，标签被拦截后利用反射得到属性值做一些业务操作复杂可以关联数据库然后把结果返回给页面。




当JSP页面包含一个自定义标签时被转化为servlet，标签转化为对称的tag handler的对象的操作。接着当servlet执行时Web container调用那些操作。






标签处理程序

　　int doStartTag() throws JspException---处理开始标签

　　int doEndTag() throws JspException---处理结束标签

　　Tag getParent()/void setParent(Tag t)---获得/设置标签的父标签

　　void setPageContext(PageContext pc)--- pageContext 属性的 setter 方法

　　void release() 释放获得的所有资源

　doStartTag()和doEndTag()方法的返回值说明：

　　SKIP_BODY　　　　　 表示不用处理标签体，直接调用doEndTag()方法。

　　SKIP_PAGE　　　　　 忽略标签后面的jsp(SUN企业级应用的首选)内容。

　　EVAL_PAGE　　　　　 处理标签后，继续处理jsp(SUN企业级应用的首选)后面的内容。

　　EVAL_BODY_BUFFERED 表示需要处理标签体，且需要重新创建一个缓冲(调用setBodyContent方法)。

　　EVAL_BODY_INCLUDE　 表示在现有的输出流对象中处理标签体，但绕过setBodyContent()和doInitBody()方法

　　EVAL_BODY_AGAIN　　　　 对标签体循环处理。(存在于javax.servlet.jsp.tagext.IterationTag接口中)


